// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package controllers

import (
	"github.com/baxiang/go-miro-practice/internal/app/details/repositories"
	"github.com/baxiang/go-miro-practice/internal/app/details/services"
	"github.com/baxiang/go-miro-practice/internal/pkg/config"
	"github.com/baxiang/go-miro-practice/internal/pkg/database"
	"github.com/baxiang/go-miro-practice/internal/pkg/log"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateDetailsController(cf string, sto repositories.DetailsRepository) (*DetailsController, error) {
	viper, err := config.NewConfig(cf)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	detailsService := services.NewDetailService(logger, sto)
	detailsController := NewDetailsController(logger, detailsService)
	return detailsController, nil
}

// wire.go:

var detailControllerProviderSet = wire.NewSet(log.ProviderSet, config.ProviderSet, database.ProviderSet, services.ProviderSet, ProviderSet)
