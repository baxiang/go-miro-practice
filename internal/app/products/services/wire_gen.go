// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package services

import (
	"github.com/baxiang/go-miro-practice/api/proto"
	"github.com/baxiang/go-miro-practice/internal/pkg/config"
	"github.com/baxiang/go-miro-practice/internal/pkg/log"
	"github.com/google/wire"
)

// Injectors from wire.go:

func CreateProductsService(cf string, detailsSvc proto.DetailsClient, ratingsSvc proto.RatingsClient, reviewsSvc proto.ReviewsClient) (ProductsService, error) {
	viper, err := config.NewConfig(cf)
	if err != nil {
		return nil, err
	}
	options, err := log.NewOptions(viper)
	if err != nil {
		return nil, err
	}
	logger, err := log.NewLogger(options)
	if err != nil {
		return nil, err
	}
	productsService := NewProductService(logger, detailsSvc, ratingsSvc, reviewsSvc)
	return productsService, nil
}

// wire.go:

var productProviderSet = wire.NewSet(log.ProviderSet, config.ProviderSet, ProviderSet)
